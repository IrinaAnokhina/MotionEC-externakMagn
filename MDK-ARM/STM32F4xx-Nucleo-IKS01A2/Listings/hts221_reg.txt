; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\stm32f4xx-nucleo-iks01a2\objects\hts221_reg.o --asm_dir=.\STM32F4xx-Nucleo-IKS01A2\Listings\ --list_dir=.\STM32F4xx-Nucleo-IKS01A2\Listings\ --depend=.\stm32f4xx-nucleo-iks01a2\objects\hts221_reg.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\Inc -I..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F4xx\Include -I..\..\..\..\..\..\Drivers\STM32F4xx_HAL_Driver\Inc -I..\..\..\..\..\..\Drivers\BSP\STM32F4xx-Nucleo -I..\..\..\..\..\..\Drivers\BSP\Components\Common -I..\..\..\..\..\..\Drivers\CMSIS\Include -I..\..\..\..\..\..\Drivers\BSP\Components\hts221 -I..\..\..\..\..\..\Drivers\BSP\Components\lps22hb -I..\..\..\..\..\..\Drivers\BSP\Components\lsm6dsl -I..\..\..\..\..\..\Drivers\BSP\Components\lsm303agr -I..\..\..\..\..\..\Drivers\BSP\IKS01A2 -I..\..\..\..\..\..\Middlewares\ST\STM32_MotionEC_Library\Inc -I..\..\..\..\..\..\Middlewares\ST\STM32_MotionMC_Library\Inc -I.\LSM9DS1 -I.\LSM9DS1 -I.\RTE\_STM32F4xx-Nucleo-IKS01A2 -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -DSTM32F401xE -DSTM32F401xE -DUSE_HAL_DRIVER -DUSE_STM32F4XX_NUCLEO -DUSE_IKS01A2 ..\..\..\..\..\..\Drivers\BSP\Components\hts221\hts221_reg.c]
                          THUMB

                          AREA ||i.hts221_block_data_update_get||, CODE, READONLY, ALIGN=1

                  hts221_block_data_update_get PROC
;;;334      */
;;;335    int32_t hts221_block_data_update_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;336    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;337      hts221_ctrl_reg1_t reg;
;;;338      int32_t ret;
;;;339    
;;;340      ret = hts221_read_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2120              MOVS     r1,#0x20
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;341      *val = reg.bdu;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f3c00080          UBFX     r0,r0,#2,#1
00001c  7020              STRB     r0,[r4,#0]
;;;342    
;;;343      return ret;
00001e  4630              MOV      r0,r6
;;;344    }
000020  bdf8              POP      {r3-r7,pc}
;;;345    
                          ENDP


                          AREA ||i.hts221_block_data_update_set||, CODE, READONLY, ALIGN=1

                  hts221_block_data_update_set PROC
;;;311      */
;;;312    int32_t hts221_block_data_update_set(hts221_ctx_t *ctx, uint8_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;313    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;314      hts221_ctrl_reg1_t reg;
;;;315      int32_t ret;
;;;316    
;;;317      ret = hts221_read_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2120              MOVS     r1,#0x20
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;318    
;;;319      if(ret == 0){
000014  b95d              CBNZ     r5,|L2.46|
;;;320        reg.bdu = val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f3640082          BFI      r0,r4,#2,#1
00001e  9000              STR      r0,[sp,#0]
;;;321        ret = hts221_write_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2120              MOVS     r1,#0x20
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L2.46|
;;;322      }
;;;323    
;;;324      return ret;
00002e  4628              MOV      r0,r5
;;;325    }
000030  bdf8              POP      {r3-r7,pc}
;;;326    
                          ENDP


                          AREA ||i.hts221_boot_get||, CODE, READONLY, ALIGN=1

                  hts221_boot_get PROC
;;;596      */
;;;597    int32_t hts221_boot_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;598    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;599      hts221_ctrl_reg2_t reg;
;;;600      int32_t ret;
;;;601    
;;;602      ret = hts221_read_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2121              MOVS     r1,#0x21
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;603      *val = reg.boot;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  09c0              LSRS     r0,r0,#7
00001a  7020              STRB     r0,[r4,#0]
;;;604    
;;;605      return ret;
00001c  4630              MOV      r0,r6
;;;606    }
00001e  bdf8              POP      {r3-r7,pc}
;;;607    
                          ENDP


                          AREA ||i.hts221_boot_set||, CODE, READONLY, ALIGN=1

                  hts221_boot_set PROC
;;;573      */
;;;574    int32_t hts221_boot_set(hts221_ctx_t *ctx, uint8_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;575    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;576      hts221_ctrl_reg2_t reg;
;;;577      int32_t ret;
;;;578    
;;;579      ret = hts221_read_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2121              MOVS     r1,#0x21
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;580    
;;;581      if(ret == 0){
000014  b95d              CBNZ     r5,|L4.46|
;;;582        reg.boot = val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f36410c7          BFI      r0,r4,#7,#1
00001e  9000              STR      r0,[sp,#0]
;;;583        ret = hts221_write_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2121              MOVS     r1,#0x21
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L4.46|
;;;584      }
;;;585    
;;;586      return ret;
00002e  4628              MOV      r0,r5
;;;587    }
000030  bdf8              POP      {r3-r7,pc}
;;;588    
                          ENDP


                          AREA ||i.hts221_data_rate_get||, CODE, READONLY, ALIGN=1

                  hts221_data_rate_get PROC
;;;275      */
;;;276    int32_t hts221_data_rate_get(hts221_ctx_t *ctx, hts221_odr_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;277    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;278      hts221_ctrl_reg1_t reg;
;;;279      int32_t ret;
;;;280    
;;;281      ret = hts221_read_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2120              MOVS     r1,#0x20
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;282    
;;;283      switch (reg.odr) {
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f0000003          AND      r0,r0,#3
00001c  b130              CBZ      r0,|L5.44|
00001e  2801              CMP      r0,#1
000020  d007              BEQ      |L5.50|
000022  2802              CMP      r0,#2
000024  d008              BEQ      |L5.56|
000026  2803              CMP      r0,#3
000028  d10c              BNE      |L5.68|
00002a  e008              B        |L5.62|
                  |L5.44|
;;;284        case HTS221_ONE_SHOT:
;;;285          *val = HTS221_ONE_SHOT;
00002c  2000              MOVS     r0,#0
00002e  7020              STRB     r0,[r4,#0]
;;;286          break;
000030  e00b              B        |L5.74|
                  |L5.50|
;;;287        case HTS221_ODR_1Hz:
;;;288          *val = HTS221_ODR_1Hz;
000032  2001              MOVS     r0,#1
000034  7020              STRB     r0,[r4,#0]
;;;289          break;
000036  e008              B        |L5.74|
                  |L5.56|
;;;290        case HTS221_ODR_7Hz:
;;;291          *val = HTS221_ODR_7Hz;
000038  2002              MOVS     r0,#2
00003a  7020              STRB     r0,[r4,#0]
;;;292          break;
00003c  e005              B        |L5.74|
                  |L5.62|
;;;293        case HTS221_ODR_12Hz5:
;;;294          *val = HTS221_ODR_12Hz5;
00003e  2003              MOVS     r0,#3
000040  7020              STRB     r0,[r4,#0]
;;;295          break;
000042  e002              B        |L5.74|
                  |L5.68|
;;;296        default:
;;;297          *val = HTS221_ODR_ND;
000044  2004              MOVS     r0,#4
000046  7020              STRB     r0,[r4,#0]
;;;298          break;
000048  bf00              NOP      
                  |L5.74|
00004a  bf00              NOP                            ;286
;;;299      }
;;;300    
;;;301      return ret;
00004c  4630              MOV      r0,r6
;;;302    }
00004e  bdf8              POP      {r3-r7,pc}
;;;303    
                          ENDP


                          AREA ||i.hts221_data_rate_set||, CODE, READONLY, ALIGN=1

                  hts221_data_rate_set PROC
;;;252      */
;;;253    int32_t hts221_data_rate_set(hts221_ctx_t *ctx, hts221_odr_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;254    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;255      hts221_ctrl_reg1_t reg;
;;;256      int32_t ret;
;;;257    
;;;258      ret = hts221_read_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2120              MOVS     r1,#0x20
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;259    
;;;260      if(ret == 0){
000014  b95d              CBNZ     r5,|L6.46|
;;;261        reg.odr = (uint8_t)val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f3640001          BFI      r0,r4,#0,#2
00001e  9000              STR      r0,[sp,#0]
;;;262        ret = hts221_write_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2120              MOVS     r1,#0x20
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L6.46|
;;;263      }
;;;264    
;;;265      return ret;
00002e  4628              MOV      r0,r5
;;;266    }
000030  bdf8              POP      {r3-r7,pc}
;;;267    
                          ENDP


                          AREA ||i.hts221_device_id_get||, CODE, READONLY, ALIGN=1

                  hts221_device_id_get PROC
;;;475      */
;;;476    int32_t hts221_device_id_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;477    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;478      int32_t ret;
;;;479      ret = hts221_read_reg(ctx, HTS221_WHO_AM_I, buff, 1);
000006  2301              MOVS     r3,#1
000008  4622              MOV      r2,r4
00000a  210f              MOVS     r1,#0xf
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;480      return ret;
000014  4630              MOV      r0,r6
;;;481    }
000016  bd70              POP      {r4-r6,pc}
;;;482    
                          ENDP


                          AREA ||i.hts221_drdy_on_int_get||, CODE, READONLY, ALIGN=1

                  hts221_drdy_on_int_get PROC
;;;665      */
;;;666    int32_t hts221_drdy_on_int_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;667    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;668      hts221_ctrl_reg3_t reg;
;;;669      int32_t ret;
;;;670    
;;;671      ret = hts221_read_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2122              MOVS     r1,#0x22
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;672      *val = reg.drdy;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f3c00080          UBFX     r0,r0,#2,#1
00001c  7020              STRB     r0,[r4,#0]
;;;673    
;;;674      return ret;
00001e  4630              MOV      r0,r6
;;;675    }
000020  bdf8              POP      {r3-r7,pc}
;;;676    
                          ENDP


                          AREA ||i.hts221_drdy_on_int_set||, CODE, READONLY, ALIGN=1

                  hts221_drdy_on_int_set PROC
;;;642      */
;;;643    int32_t hts221_drdy_on_int_set(hts221_ctx_t *ctx, uint8_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;644    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;645      hts221_ctrl_reg3_t reg;
;;;646      int32_t ret;
;;;647    
;;;648      ret = hts221_read_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2122              MOVS     r1,#0x22
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;649    
;;;650      if(ret == 0){
000014  b95d              CBNZ     r5,|L9.46|
;;;651        reg.drdy = val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f3640082          BFI      r0,r4,#2,#1
00001e  9000              STR      r0,[sp,#0]
;;;652        ret = hts221_write_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2122              MOVS     r1,#0x22
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L9.46|
;;;653      }
;;;654    
;;;655      return ret;
00002e  4628              MOV      r0,r5
;;;656    }
000030  bdf8              POP      {r3-r7,pc}
;;;657    
                          ENDP


                          AREA ||i.hts221_heater_get||, CODE, READONLY, ALIGN=1

                  hts221_heater_get PROC
;;;554      */
;;;555    int32_t hts221_heater_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;556    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;557      hts221_ctrl_reg2_t reg;
;;;558      int32_t ret;
;;;559    
;;;560      ret = hts221_read_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2121              MOVS     r1,#0x21
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;561      *val = reg.heater;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f3c00040          UBFX     r0,r0,#1,#1
00001c  7020              STRB     r0,[r4,#0]
;;;562    
;;;563      return ret;
00001e  4630              MOV      r0,r6
;;;564    }
000020  bdf8              POP      {r3-r7,pc}
;;;565    
                          ENDP


                          AREA ||i.hts221_heater_set||, CODE, READONLY, ALIGN=1

                  hts221_heater_set PROC
;;;531      */
;;;532    int32_t hts221_heater_set(hts221_ctx_t *ctx, uint8_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;533    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;534      hts221_ctrl_reg2_t reg;
;;;535      int32_t ret;
;;;536    
;;;537      ret = hts221_read_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2121              MOVS     r1,#0x21
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;538    
;;;539      if(ret == 0){
000014  b95d              CBNZ     r5,|L11.46|
;;;540        reg.heater = val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f3640041          BFI      r0,r4,#1,#1
00001e  9000              STR      r0,[sp,#0]
;;;541        ret = hts221_write_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2121              MOVS     r1,#0x21
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L11.46|
;;;542      }
;;;543    
;;;544      return ret;
00002e  4628              MOV      r0,r5
;;;545    }
000030  bdf8              POP      {r3-r7,pc}
;;;546    
                          ENDP


                          AREA ||i.hts221_hum_adc_point_0_get||, CODE, READONLY, ALIGN=1

                  hts221_hum_adc_point_0_get PROC
;;;888      */
;;;889    int32_t hts221_hum_adc_point_0_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;890    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;891      int32_t ret;
;;;892      ret = hts221_read_reg(ctx, HTS221_H0_T0_OUT_L, buff, 2);
000006  2302              MOVS     r3,#2
000008  4622              MOV      r2,r4
00000a  2136              MOVS     r1,#0x36
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;893      return ret;
000014  4630              MOV      r0,r6
;;;894    }
000016  bd70              POP      {r4-r6,pc}
;;;895    
                          ENDP


                          AREA ||i.hts221_hum_adc_point_1_get||, CODE, READONLY, ALIGN=1

                  hts221_hum_adc_point_1_get PROC
;;;903      */
;;;904    int32_t hts221_hum_adc_point_1_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;905    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;906      int32_t ret;
;;;907      ret = hts221_read_reg(ctx, HTS221_H1_T0_OUT_L, buff, 2);
000006  2302              MOVS     r3,#2
000008  4622              MOV      r2,r4
00000a  213a              MOVS     r1,#0x3a
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;908      return ret;
000014  4630              MOV      r0,r6
;;;909    }
000016  bd70              POP      {r4-r6,pc}
;;;910    
                          ENDP


                          AREA ||i.hts221_hum_data_ready_get||, CODE, READONLY, ALIGN=1

                  hts221_hum_data_ready_get PROC
;;;414      */
;;;415    int32_t hts221_hum_data_ready_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;416    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;417      hts221_status_reg_t reg;
;;;418      int32_t ret;
;;;419    
;;;420      ret = hts221_read_reg(ctx, HTS221_STATUS_REG, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2127              MOVS     r1,#0x27
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;421      *val = reg.h_da;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f3c00040          UBFX     r0,r0,#1,#1
00001c  7020              STRB     r0,[r4,#0]
;;;422    
;;;423      return ret;
00001e  4630              MOV      r0,r6
;;;424    }
000020  bdf8              POP      {r3-r7,pc}
;;;425    
                          ENDP


                          AREA ||i.hts221_hum_rh_point_0_get||, CODE, READONLY, ALIGN=1

                  hts221_hum_rh_point_0_get PROC
;;;802      */
;;;803    int32_t hts221_hum_rh_point_0_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;804    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;805      int32_t ret;
;;;806    
;;;807      ret = hts221_read_reg(ctx, HTS221_H0_RH_X2, buff, 1);
000006  2301              MOVS     r3,#1
000008  4622              MOV      r2,r4
00000a  2130              MOVS     r1,#0x30
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;808      *buff = (uint8_t)(((uint16_t)(*buff) >> 1) & 0x7FFFu);
000014  7820              LDRB     r0,[r4,#0]
000016  0840              LSRS     r0,r0,#1
000018  7020              STRB     r0,[r4,#0]
;;;809    
;;;810      return ret;
00001a  4630              MOV      r0,r6
;;;811    }
00001c  bd70              POP      {r4-r6,pc}
;;;812    
                          ENDP


                          AREA ||i.hts221_hum_rh_point_1_get||, CODE, READONLY, ALIGN=1

                  hts221_hum_rh_point_1_get PROC
;;;820      */
;;;821    int32_t hts221_hum_rh_point_1_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;822    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;823      int32_t ret;
;;;824    
;;;825      ret = hts221_read_reg(ctx, HTS221_H1_RH_X2, buff, 1);
000006  2301              MOVS     r3,#1
000008  4622              MOV      r2,r4
00000a  2131              MOVS     r1,#0x31
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;826      *buff = (uint8_t)(((uint16_t)(*buff) >> 1) & 0x7FFFu);
000014  7820              LDRB     r0,[r4,#0]
000016  0840              LSRS     r0,r0,#1
000018  7020              STRB     r0,[r4,#0]
;;;827    
;;;828      return ret;
00001a  4630              MOV      r0,r6
;;;829    }
00001c  bd70              POP      {r4-r6,pc}
;;;830    
                          ENDP


                          AREA ||i.hts221_humidity_avg_get||, CODE, READONLY, ALIGN=1

                  hts221_humidity_avg_get PROC
;;;133      */
;;;134    int32_t hts221_humidity_avg_get(hts221_ctx_t *ctx, hts221_avgh_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;135    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;136      hts221_av_conf_t reg;
;;;137      int32_t ret;
;;;138    
;;;139      ret = hts221_read_reg(ctx, HTS221_AV_CONF, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2110              MOVS     r1,#0x10
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;140    
;;;141      switch (reg.avgh) {
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f0000007          AND      r0,r0,#7
00001c  2808              CMP      r0,#8
00001e  d21d              BCS      |L17.92|
000020  e8dff000          TBB      [pc,r0]
000024  04070a0d          DCB      0x04,0x07,0x0a,0x0d
000028  10131619          DCB      0x10,0x13,0x16,0x19
;;;142        case HTS221_H_AVG_4:
;;;143          *val = HTS221_H_AVG_4;
00002c  2000              MOVS     r0,#0
00002e  7020              STRB     r0,[r4,#0]
;;;144          break;
000030  e017              B        |L17.98|
;;;145        case HTS221_H_AVG_8:
;;;146          *val = HTS221_H_AVG_8;
000032  2001              MOVS     r0,#1
000034  7020              STRB     r0,[r4,#0]
;;;147          break;
000036  e014              B        |L17.98|
;;;148        case HTS221_H_AVG_16:
;;;149          *val = HTS221_H_AVG_16;
000038  2002              MOVS     r0,#2
00003a  7020              STRB     r0,[r4,#0]
;;;150          break;
00003c  e011              B        |L17.98|
;;;151        case HTS221_H_AVG_32:
;;;152          *val = HTS221_H_AVG_32;
00003e  2003              MOVS     r0,#3
000040  7020              STRB     r0,[r4,#0]
;;;153          break;
000042  e00e              B        |L17.98|
;;;154        case HTS221_H_AVG_64:
;;;155          *val = HTS221_H_AVG_64;
000044  2004              MOVS     r0,#4
000046  7020              STRB     r0,[r4,#0]
;;;156          break;
000048  e00b              B        |L17.98|
;;;157        case HTS221_H_AVG_128:
;;;158          *val = HTS221_H_AVG_128;
00004a  2005              MOVS     r0,#5
00004c  7020              STRB     r0,[r4,#0]
;;;159          break;
00004e  e008              B        |L17.98|
;;;160        case HTS221_H_AVG_256:
;;;161          *val = HTS221_H_AVG_256;
000050  2006              MOVS     r0,#6
000052  7020              STRB     r0,[r4,#0]
;;;162          break;
000054  e005              B        |L17.98|
;;;163        case HTS221_H_AVG_512:
;;;164          *val = HTS221_H_AVG_512;
000056  2007              MOVS     r0,#7
000058  7020              STRB     r0,[r4,#0]
;;;165          break;
00005a  e002              B        |L17.98|
                  |L17.92|
;;;166        default:
;;;167          *val = HTS221_H_AVG_ND;
00005c  2008              MOVS     r0,#8
00005e  7020              STRB     r0,[r4,#0]
;;;168          break;
000060  bf00              NOP      
                  |L17.98|
000062  bf00              NOP                            ;144
;;;169      }
;;;170    
;;;171      return ret;
000064  4630              MOV      r0,r6
;;;172    }
000066  bdf8              POP      {r3-r7,pc}
;;;173    
                          ENDP


                          AREA ||i.hts221_humidity_avg_set||, CODE, READONLY, ALIGN=1

                  hts221_humidity_avg_set PROC
;;;110      */
;;;111    int32_t hts221_humidity_avg_set(hts221_ctx_t *ctx, hts221_avgh_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;112    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;113      hts221_av_conf_t reg;
;;;114      int32_t ret;
;;;115    
;;;116      ret = hts221_read_reg(ctx, HTS221_AV_CONF, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2110              MOVS     r1,#0x10
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;117    
;;;118      if(ret == 0){
000014  b95d              CBNZ     r5,|L18.46|
;;;119        reg.avgh = (uint8_t)val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f3640002          BFI      r0,r4,#0,#3
00001e  9000              STR      r0,[sp,#0]
;;;120        ret = hts221_write_reg(ctx, HTS221_AV_CONF, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2110              MOVS     r1,#0x10
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L18.46|
;;;121      }
;;;122    
;;;123      return ret;
00002e  4628              MOV      r0,r5
;;;124    }
000030  bdf8              POP      {r3-r7,pc}
;;;125    
                          ENDP


                          AREA ||i.hts221_humidity_raw_get||, CODE, READONLY, ALIGN=1

                  hts221_humidity_raw_get PROC
;;;433      */
;;;434    int32_t hts221_humidity_raw_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;435    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;436      int32_t ret;
;;;437      ret = hts221_read_reg(ctx, HTS221_HUMIDITY_OUT_L, buff, 2);
000006  2302              MOVS     r3,#2
000008  4622              MOV      r2,r4
00000a  2128              MOVS     r1,#0x28
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;438      return ret;
000014  4630              MOV      r0,r6
;;;439    }
000016  bd70              POP      {r4-r6,pc}
;;;440    
                          ENDP


                          AREA ||i.hts221_int_polarity_get||, CODE, READONLY, ALIGN=1

                  hts221_int_polarity_get PROC
;;;759      */
;;;760    int32_t hts221_int_polarity_get(hts221_ctx_t *ctx, hts221_drdy_h_l_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;761    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;762      hts221_ctrl_reg3_t reg;
;;;763      int32_t ret;
;;;764    
;;;765      ret = hts221_read_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2122              MOVS     r1,#0x22
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;766    
;;;767      switch (reg.drdy_h_l) {
000014  f89d0000          LDRB     r0,[sp,#0]
000018  09c0              LSRS     r0,r0,#7
00001a  b110              CBZ      r0,|L20.34|
00001c  2801              CMP      r0,#1
00001e  d106              BNE      |L20.46|
000020  e002              B        |L20.40|
                  |L20.34|
;;;768        case HTS221_ACTIVE_HIGH:
;;;769          *val = HTS221_ACTIVE_HIGH;
000022  2000              MOVS     r0,#0
000024  7020              STRB     r0,[r4,#0]
;;;770          break;
000026  e005              B        |L20.52|
                  |L20.40|
;;;771        case HTS221_ACTIVE_LOW:
;;;772          *val = HTS221_ACTIVE_LOW;
000028  2001              MOVS     r0,#1
00002a  7020              STRB     r0,[r4,#0]
;;;773          break;
00002c  e002              B        |L20.52|
                  |L20.46|
;;;774        default:
;;;775          *val = HTS221_ACTIVE_ND;
00002e  2002              MOVS     r0,#2
000030  7020              STRB     r0,[r4,#0]
;;;776          break;
000032  bf00              NOP      
                  |L20.52|
000034  bf00              NOP                            ;770
;;;777      }
;;;778    
;;;779      return ret;
000036  4630              MOV      r0,r6
;;;780    }
000038  bdf8              POP      {r3-r7,pc}
;;;781    
                          ENDP


                          AREA ||i.hts221_int_polarity_set||, CODE, READONLY, ALIGN=1

                  hts221_int_polarity_set PROC
;;;736      */
;;;737    int32_t hts221_int_polarity_set(hts221_ctx_t *ctx, hts221_drdy_h_l_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;738    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;739      hts221_ctrl_reg3_t reg;
;;;740      int32_t ret;
;;;741    
;;;742      ret = hts221_read_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2122              MOVS     r1,#0x22
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;743    
;;;744      if(ret == 0){
000014  b95d              CBNZ     r5,|L21.46|
;;;745        reg.drdy_h_l = (uint8_t)val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f36410c7          BFI      r0,r4,#7,#1
00001e  9000              STR      r0,[sp,#0]
;;;746        ret = hts221_write_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2122              MOVS     r1,#0x22
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L21.46|
;;;747      }
;;;748    
;;;749      return ret;
00002e  4628              MOV      r0,r5
;;;750    }
000030  bdf8              POP      {r3-r7,pc}
;;;751    
                          ENDP


                          AREA ||i.hts221_one_shoot_trigger_get||, CODE, READONLY, ALIGN=1

                  hts221_one_shoot_trigger_get PROC
;;;376      */
;;;377    int32_t hts221_one_shoot_trigger_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;378    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;379      hts221_ctrl_reg2_t reg;
;;;380      int32_t ret;
;;;381    
;;;382      ret = hts221_read_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2121              MOVS     r1,#0x21
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;383      *val = reg.one_shot;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f0000001          AND      r0,r0,#1
00001c  7020              STRB     r0,[r4,#0]
;;;384    
;;;385      return ret;
00001e  4630              MOV      r0,r6
;;;386    }
000020  bdf8              POP      {r3-r7,pc}
;;;387    
                          ENDP


                          AREA ||i.hts221_one_shoot_trigger_set||, CODE, READONLY, ALIGN=1

                  hts221_one_shoot_trigger_set PROC
;;;353      */
;;;354    int32_t hts221_one_shoot_trigger_set(hts221_ctx_t *ctx, uint8_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;355    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;356      hts221_ctrl_reg2_t reg;
;;;357      int32_t ret;
;;;358    
;;;359      ret = hts221_read_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2121              MOVS     r1,#0x21
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;360    
;;;361      if(ret == 0){
000014  b95d              CBNZ     r5,|L23.46|
;;;362        reg.one_shot = val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f3640000          BFI      r0,r4,#0,#1
00001e  9000              STR      r0,[sp,#0]
;;;363        ret = hts221_write_reg(ctx, HTS221_CTRL_REG2, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2121              MOVS     r1,#0x21
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L23.46|
;;;364      }
;;;365    
;;;366      return ret;
00002e  4628              MOV      r0,r5
;;;367    }
000030  bdf8              POP      {r3-r7,pc}
;;;368    
                          ENDP


                          AREA ||i.hts221_pin_mode_get||, CODE, READONLY, ALIGN=1

                  hts221_pin_mode_get PROC
;;;706      */
;;;707    int32_t hts221_pin_mode_get(hts221_ctx_t *ctx, hts221_pp_od_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;708    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;709      hts221_ctrl_reg3_t reg;
;;;710      int32_t ret;
;;;711    
;;;712      ret = hts221_read_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2122              MOVS     r1,#0x22
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;713    
;;;714      switch (reg.pp_od) {
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f3c01080          UBFX     r0,r0,#6,#1
00001c  b110              CBZ      r0,|L24.36|
00001e  2801              CMP      r0,#1
000020  d106              BNE      |L24.48|
000022  e002              B        |L24.42|
                  |L24.36|
;;;715        case HTS221_PUSH_PULL:
;;;716          *val = HTS221_PUSH_PULL;
000024  2000              MOVS     r0,#0
000026  7020              STRB     r0,[r4,#0]
;;;717          break;
000028  e005              B        |L24.54|
                  |L24.42|
;;;718        case HTS221_OPEN_DRAIN:
;;;719          *val = HTS221_OPEN_DRAIN;
00002a  2001              MOVS     r0,#1
00002c  7020              STRB     r0,[r4,#0]
;;;720          break;
00002e  e002              B        |L24.54|
                  |L24.48|
;;;721        default:
;;;722          *val = HTS221_PIN_MODE_ND;
000030  2002              MOVS     r0,#2
000032  7020              STRB     r0,[r4,#0]
;;;723          break;
000034  bf00              NOP      
                  |L24.54|
000036  bf00              NOP                            ;717
;;;724      }
;;;725    
;;;726      return ret;
000038  4630              MOV      r0,r6
;;;727    }
00003a  bdf8              POP      {r3-r7,pc}
;;;728    
                          ENDP


                          AREA ||i.hts221_pin_mode_set||, CODE, READONLY, ALIGN=1

                  hts221_pin_mode_set PROC
;;;683      */
;;;684    int32_t hts221_pin_mode_set(hts221_ctx_t *ctx, hts221_pp_od_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;685    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;686      hts221_ctrl_reg3_t reg;
;;;687      int32_t ret;
;;;688    
;;;689      ret = hts221_read_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2122              MOVS     r1,#0x22
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;690    
;;;691      if(ret == 0){
000014  b95d              CBNZ     r5,|L25.46|
;;;692        reg.pp_od = (uint8_t)val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f3641086          BFI      r0,r4,#6,#1
00001e  9000              STR      r0,[sp,#0]
;;;693        ret = hts221_write_reg(ctx, HTS221_CTRL_REG3, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2122              MOVS     r1,#0x22
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L25.46|
;;;694      }
;;;695    
;;;696      return ret;
00002e  4628              MOV      r0,r5
;;;697    }
000030  bdf8              POP      {r3-r7,pc}
;;;698    
                          ENDP


                          AREA ||i.hts221_power_on_get||, CODE, READONLY, ALIGN=1

                  hts221_power_on_get PROC
;;;512      */
;;;513    int32_t hts221_power_on_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;514    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;515      hts221_ctrl_reg1_t reg;
;;;516      int32_t mm_error;
;;;517    
;;;518      mm_error = hts221_read_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2120              MOVS     r1,#0x20
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;519      *val = reg.pd;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  09c0              LSRS     r0,r0,#7
00001a  7020              STRB     r0,[r4,#0]
;;;520    
;;;521      return mm_error;
00001c  4630              MOV      r0,r6
;;;522    }
00001e  bdf8              POP      {r3-r7,pc}
;;;523    
                          ENDP


                          AREA ||i.hts221_power_on_set||, CODE, READONLY, ALIGN=1

                  hts221_power_on_set PROC
;;;490      */
;;;491    int32_t hts221_power_on_set(hts221_ctx_t *ctx, uint8_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;492    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;493      hts221_ctrl_reg1_t reg;
;;;494      int32_t ret;
;;;495    
;;;496      ret = hts221_read_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2120              MOVS     r1,#0x20
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;497    
;;;498      if(ret == 0){
000014  b95d              CBNZ     r5,|L27.46|
;;;499        reg.pd = val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f36410c7          BFI      r0,r4,#7,#1
00001e  9000              STR      r0,[sp,#0]
;;;500        ret = hts221_write_reg(ctx, HTS221_CTRL_REG1, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2120              MOVS     r1,#0x20
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L27.46|
;;;501      }
;;;502      return ret;
00002e  4628              MOV      r0,r5
;;;503    }
000030  bdf8              POP      {r3-r7,pc}
;;;504    
                          ENDP


                          AREA ||i.hts221_read_reg||, CODE, READONLY, ALIGN=1

                  hts221_read_reg PROC
;;;64       */
;;;65     int32_t hts221_read_reg(hts221_ctx_t* ctx, uint8_t reg, uint8_t* data,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;66                             uint16_t len)
;;;67     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;68       int32_t ret;
;;;69       ret = ctx->read_reg(ctx->handle, reg, data, len);
00000c  463b              MOV      r3,r7
00000e  4632              MOV      r2,r6
000010  4629              MOV      r1,r5
000012  e9d4c001          LDRD     r12,r0,[r4,#4]
000016  47e0              BLX      r12
000018  4680              MOV      r8,r0
;;;70       return ret;
00001a  4640              MOV      r0,r8
;;;71     }
00001c  e8bd81f0          POP      {r4-r8,pc}
;;;72     
                          ENDP


                          AREA ||i.hts221_status_get||, CODE, READONLY, ALIGN=1

                  hts221_status_get PROC
;;;615      */
;;;616    int32_t hts221_status_get(hts221_ctx_t *ctx, hts221_status_reg_t *val)
000000  b570              PUSH     {r4-r6,lr}
;;;617    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;618      int32_t ret;
;;;619      ret = hts221_read_reg(ctx, HTS221_STATUS_REG, (uint8_t*) val, 1);
000006  2301              MOVS     r3,#1
000008  4622              MOV      r2,r4
00000a  2127              MOVS     r1,#0x27
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;620      return ret;
000014  4630              MOV      r0,r6
;;;621    }
000016  bd70              POP      {r4-r6,pc}
;;;622    
                          ENDP


                          AREA ||i.hts221_temp_adc_point_0_get||, CODE, READONLY, ALIGN=1

                  hts221_temp_adc_point_0_get PROC
;;;918      */
;;;919    int32_t hts221_temp_adc_point_0_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;920    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;921      int32_t ret;
;;;922      ret = hts221_read_reg(ctx, HTS221_T0_OUT_L, buff, 2);
000006  2302              MOVS     r3,#2
000008  4622              MOV      r2,r4
00000a  213c              MOVS     r1,#0x3c
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;923      return ret;
000014  4630              MOV      r0,r6
;;;924    }
000016  bd70              POP      {r4-r6,pc}
;;;925    
                          ENDP


                          AREA ||i.hts221_temp_adc_point_1_get||, CODE, READONLY, ALIGN=1

                  hts221_temp_adc_point_1_get PROC
;;;933      */
;;;934    int32_t hts221_temp_adc_point_1_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;935    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;936      int32_t ret;
;;;937      ret = hts221_read_reg(ctx, HTS221_T1_OUT_L, buff, 2);
000006  2302              MOVS     r3,#2
000008  4622              MOV      r2,r4
00000a  213e              MOVS     r1,#0x3e
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;938      return ret;
000014  4630              MOV      r0,r6
;;;939    }
000016  bd70              POP      {r4-r6,pc}
;;;940    
                          ENDP


                          AREA ||i.hts221_temp_data_ready_get||, CODE, READONLY, ALIGN=1

                  hts221_temp_data_ready_get PROC
;;;395      */
;;;396    int32_t hts221_temp_data_ready_get(hts221_ctx_t *ctx, uint8_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;397    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;398      hts221_status_reg_t reg;
;;;399      int32_t ret;
;;;400    
;;;401      ret = hts221_read_reg(ctx, HTS221_STATUS_REG, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2127              MOVS     r1,#0x27
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;402      *val = reg.t_da;
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f0000001          AND      r0,r0,#1
00001c  7020              STRB     r0,[r4,#0]
;;;403    
;;;404      return ret;
00001e  4630              MOV      r0,r6
;;;405    }
000020  bdf8              POP      {r3-r7,pc}
;;;406    
                          ENDP


                          AREA ||i.hts221_temp_deg_point_0_get||, CODE, READONLY, ALIGN=1

                  hts221_temp_deg_point_0_get PROC
;;;838      */
;;;839    int32_t hts221_temp_deg_point_0_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;840    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;841      hts221_t1_t0_msb_t reg;
;;;842      uint8_t coeff_h, coeff_l;
;;;843      int32_t ret;
;;;844    
;;;845      ret = hts221_read_reg(ctx, HTS221_T0_DEGC_X8, &coeff_l, 1);
000008  2301              MOVS     r3,#1
00000a  466a              MOV      r2,sp
00000c  2132              MOVS     r1,#0x32
00000e  4638              MOV      r0,r7
000010  f7fffffe          BL       hts221_read_reg
000014  4606              MOV      r6,r0
;;;846    
;;;847      if(ret == 0){
000016  b986              CBNZ     r6,|L33.58|
;;;848        ret = hts221_read_reg(ctx, HTS221_T1_T0_MSB, (uint8_t*) &reg, 1);
000018  2301              MOVS     r3,#1
00001a  aa01              ADD      r2,sp,#4
00001c  2135              MOVS     r1,#0x35
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       hts221_read_reg
000024  4606              MOV      r6,r0
;;;849        coeff_h = reg.t0_msb;
000026  f89d0004          LDRB     r0,[sp,#4]
00002a  f0000503          AND      r5,r0,#3
;;;850        *(buff) = (uint8_t)(((coeff_h << 8) + coeff_l) >> 3);
00002e  f89d0000          LDRB     r0,[sp,#0]
000032  eb002005          ADD      r0,r0,r5,LSL #8
000036  08c0              LSRS     r0,r0,#3
000038  7020              STRB     r0,[r4,#0]
                  |L33.58|
;;;851      }
;;;852    
;;;853      return ret;
00003a  4630              MOV      r0,r6
;;;854    }
00003c  e8bd81fc          POP      {r2-r8,pc}
;;;855    
                          ENDP


                          AREA ||i.hts221_temp_deg_point_1_get||, CODE, READONLY, ALIGN=1

                  hts221_temp_deg_point_1_get PROC
;;;863      */
;;;864    int32_t hts221_temp_deg_point_1_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;865    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;866      hts221_t1_t0_msb_t reg;
;;;867      uint8_t coeff_h, coeff_l;
;;;868      int32_t ret;
;;;869    
;;;870      ret = hts221_read_reg(ctx, HTS221_T1_DEGC_X8, &coeff_l, 1);
000008  2301              MOVS     r3,#1
00000a  466a              MOV      r2,sp
00000c  2133              MOVS     r1,#0x33
00000e  4638              MOV      r0,r7
000010  f7fffffe          BL       hts221_read_reg
000014  4606              MOV      r6,r0
;;;871    
;;;872      if(ret == 0){
000016  b986              CBNZ     r6,|L34.58|
;;;873        ret = hts221_read_reg(ctx, HTS221_T1_T0_MSB, (uint8_t*) &reg, 1);
000018  2301              MOVS     r3,#1
00001a  aa01              ADD      r2,sp,#4
00001c  2135              MOVS     r1,#0x35
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       hts221_read_reg
000024  4606              MOV      r6,r0
;;;874        coeff_h = reg.t1_msb;
000026  f89d0004          LDRB     r0,[sp,#4]
00002a  f3c00581          UBFX     r5,r0,#2,#2
;;;875        *(buff) = (uint8_t)(((coeff_h << 8) + coeff_l) >> 3);
00002e  f89d0000          LDRB     r0,[sp,#0]
000032  eb002005          ADD      r0,r0,r5,LSL #8
000036  08c0              LSRS     r0,r0,#3
000038  7020              STRB     r0,[r4,#0]
                  |L34.58|
;;;876      }
;;;877    
;;;878      return ret;
00003a  4630              MOV      r0,r6
;;;879    }
00003c  e8bd81fc          POP      {r2-r8,pc}
;;;880    
                          ENDP


                          AREA ||i.hts221_temperature_avg_get||, CODE, READONLY, ALIGN=1

                  hts221_temperature_avg_get PROC
;;;204      */
;;;205    int32_t hts221_temperature_avg_get(hts221_ctx_t *ctx, hts221_avgt_t *val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;206    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;207      hts221_av_conf_t reg;
;;;208      int32_t ret;
;;;209    
;;;210      ret = hts221_read_reg(ctx, HTS221_AV_CONF, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2110              MOVS     r1,#0x10
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;211    
;;;212      switch (reg.avgh) {
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f0000007          AND      r0,r0,#7
00001c  2808              CMP      r0,#8
00001e  d21d              BCS      |L35.92|
000020  e8dff000          TBB      [pc,r0]
000024  04070a0d          DCB      0x04,0x07,0x0a,0x0d
000028  10131619          DCB      0x10,0x13,0x16,0x19
;;;213        case HTS221_T_AVG_2:
;;;214          *val = HTS221_T_AVG_2;
00002c  2000              MOVS     r0,#0
00002e  7020              STRB     r0,[r4,#0]
;;;215          break;
000030  e017              B        |L35.98|
;;;216        case HTS221_T_AVG_4:
;;;217          *val = HTS221_T_AVG_4;
000032  2001              MOVS     r0,#1
000034  7020              STRB     r0,[r4,#0]
;;;218          break;
000036  e014              B        |L35.98|
;;;219        case HTS221_T_AVG_8:
;;;220          *val = HTS221_T_AVG_8;
000038  2002              MOVS     r0,#2
00003a  7020              STRB     r0,[r4,#0]
;;;221          break;
00003c  e011              B        |L35.98|
;;;222        case HTS221_T_AVG_16:
;;;223          *val = HTS221_T_AVG_16;
00003e  2003              MOVS     r0,#3
000040  7020              STRB     r0,[r4,#0]
;;;224          break;
000042  e00e              B        |L35.98|
;;;225        case HTS221_T_AVG_32:
;;;226          *val = HTS221_T_AVG_32;
000044  2004              MOVS     r0,#4
000046  7020              STRB     r0,[r4,#0]
;;;227          break;
000048  e00b              B        |L35.98|
;;;228        case HTS221_T_AVG_64:
;;;229          *val = HTS221_T_AVG_64;
00004a  2005              MOVS     r0,#5
00004c  7020              STRB     r0,[r4,#0]
;;;230          break;
00004e  e008              B        |L35.98|
;;;231        case HTS221_T_AVG_128:
;;;232          *val = HTS221_T_AVG_128;
000050  2006              MOVS     r0,#6
000052  7020              STRB     r0,[r4,#0]
;;;233          break;
000054  e005              B        |L35.98|
;;;234        case HTS221_T_AVG_256:
;;;235          *val = HTS221_T_AVG_256;
000056  2007              MOVS     r0,#7
000058  7020              STRB     r0,[r4,#0]
;;;236          break;
00005a  e002              B        |L35.98|
                  |L35.92|
;;;237        default:
;;;238          *val = HTS221_T_AVG_ND;
00005c  2008              MOVS     r0,#8
00005e  7020              STRB     r0,[r4,#0]
;;;239          break;
000060  bf00              NOP      
                  |L35.98|
000062  bf00              NOP                            ;215
;;;240      }
;;;241    
;;;242      return ret;
000064  4630              MOV      r0,r6
;;;243    }
000066  bdf8              POP      {r3-r7,pc}
;;;244    
                          ENDP


                          AREA ||i.hts221_temperature_avg_set||, CODE, READONLY, ALIGN=1

                  hts221_temperature_avg_set PROC
;;;181      */
;;;182    int32_t hts221_temperature_avg_set(hts221_ctx_t *ctx, hts221_avgt_t val)
000000  b5f8              PUSH     {r3-r7,lr}
;;;183    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;184      hts221_av_conf_t reg;
;;;185      int32_t ret;
;;;186    
;;;187      ret = hts221_read_reg(ctx, HTS221_AV_CONF, (uint8_t*) &reg, 1);
000006  2301              MOVS     r3,#1
000008  466a              MOV      r2,sp
00000a  2110              MOVS     r1,#0x10
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       hts221_read_reg
000012  4605              MOV      r5,r0
;;;188    
;;;189      if(ret == 0){
000014  b95d              CBNZ     r5,|L36.46|
;;;190        reg.avgt = (uint8_t)val;
000016  f89d0000          LDRB     r0,[sp,#0]
00001a  f36400c5          BFI      r0,r4,#3,#3
00001e  9000              STR      r0,[sp,#0]
;;;191        ret = hts221_write_reg(ctx, HTS221_AV_CONF, (uint8_t*) &reg, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2110              MOVS     r1,#0x10
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       hts221_write_reg
00002c  4605              MOV      r5,r0
                  |L36.46|
;;;192      }
;;;193    
;;;194      return ret;
00002e  4628              MOV      r0,r5
;;;195    }
000030  bdf8              POP      {r3-r7,pc}
;;;196    
                          ENDP


                          AREA ||i.hts221_temperature_raw_get||, CODE, READONLY, ALIGN=1

                  hts221_temperature_raw_get PROC
;;;448      */
;;;449    int32_t hts221_temperature_raw_get(hts221_ctx_t *ctx, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;450    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;451      int32_t ret;
;;;452      ret = hts221_read_reg(ctx, HTS221_TEMP_OUT_L, buff, 2);
000006  2302              MOVS     r3,#2
000008  4622              MOV      r2,r4
00000a  212a              MOVS     r1,#0x2a
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       hts221_read_reg
000012  4606              MOV      r6,r0
;;;453      return ret;
000014  4630              MOV      r0,r6
;;;454    }
000016  bd70              POP      {r4-r6,pc}
;;;455    
                          ENDP


                          AREA ||i.hts221_write_reg||, CODE, READONLY, ALIGN=1

                  hts221_write_reg PROC
;;;82       */
;;;83     int32_t hts221_write_reg(hts221_ctx_t* ctx, uint8_t reg, uint8_t* data,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;84                              uint16_t len)
;;;85     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;86       int32_t ret;
;;;87       ret = ctx->write_reg(ctx->handle, reg, data, len);
00000c  463b              MOV      r3,r7
00000e  4632              MOV      r2,r6
000010  4629              MOV      r1,r5
000012  f8d4c000          LDR      r12,[r4,#0]
000016  68a0              LDR      r0,[r4,#8]
000018  47e0              BLX      r12
00001a  4680              MOV      r8,r0
;;;88       return ret;
00001c  4640              MOV      r0,r8
;;;89     }
00001e  e8bd81f0          POP      {r4-r8,pc}
;;;90     
                          ENDP

