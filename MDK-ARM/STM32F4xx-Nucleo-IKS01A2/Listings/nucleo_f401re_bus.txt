; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\stm32f4xx-nucleo-iks01a2\objects\nucleo_f401re_bus.o --asm_dir=.\STM32F4xx-Nucleo-IKS01A2\Listings\ --list_dir=.\STM32F4xx-Nucleo-IKS01A2\Listings\ --depend=.\stm32f4xx-nucleo-iks01a2\objects\nucleo_f401re_bus.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\Inc -I..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F4xx\Include -I..\..\..\..\..\..\Drivers\STM32F4xx_HAL_Driver\Inc -I..\..\..\..\..\..\Drivers\BSP\STM32F4xx-Nucleo -I..\..\..\..\..\..\Drivers\BSP\Components\Common -I..\..\..\..\..\..\Drivers\CMSIS\Include -I..\..\..\..\..\..\Drivers\BSP\Components\hts221 -I..\..\..\..\..\..\Drivers\BSP\Components\lps22hb -I..\..\..\..\..\..\Drivers\BSP\Components\lsm6dsl -I..\..\..\..\..\..\Drivers\BSP\Components\lsm303agr -I..\..\..\..\..\..\Drivers\BSP\IKS01A2 -I..\..\..\..\..\..\Middlewares\ST\STM32_MotionEC_Library\Inc -I..\..\..\..\..\..\Middlewares\ST\STM32_MotionMC_Library\Inc -I.\LSM9DS1 -I.\LSM9DS1 -I.\RTE\_STM32F4xx-Nucleo-IKS01A2 -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -DSTM32F401xE -DSTM32F401xE -DUSE_HAL_DRIVER -DUSE_STM32F4XX_NUCLEO -DUSE_IKS01A2 ..\Src\nucleo_f401re_bus.c]
                          THUMB

                          AREA ||i.BSP_GetTick||, CODE, READONLY, ALIGN=1

                  BSP_GetTick PROC
;;;417      */
;;;418    int32_t BSP_GetTick(void)
000000  b510              PUSH     {r4,lr}
;;;419    {
;;;420      return HAL_GetTick();
000002  f7fffffe          BL       HAL_GetTick
;;;421    }
000006  bd10              POP      {r4,pc}
;;;422    
                          ENDP


                          AREA ||i.BSP_I2C1_DeInit||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_DeInit PROC
;;;188      */
;;;189    int32_t BSP_I2C1_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;190    {
;;;191      int32_t ret = BSP_ERROR_BUS_FAILURE;
000002  f06f0407          MVN      r4,#7
;;;192    
;;;193    #if (USE_HAL_I2C_REGISTER_CALLBACKS == 0)
;;;194      /* DeInit the I2C */
;;;195      I2C1_MspDeInit(&hbusi2c1);
000006  4805              LDR      r0,|L2.28|
000008  f7fffffe          BL       I2C1_MspDeInit
;;;196    #endif
;;;197    
;;;198      if (HAL_I2C_DeInit(&hbusi2c1) == HAL_OK)
00000c  4803              LDR      r0,|L2.28|
00000e  f7fffffe          BL       HAL_I2C_DeInit
000012  b900              CBNZ     r0,|L2.22|
;;;199      {
;;;200        ret = BSP_ERROR_NONE;
000014  2400              MOVS     r4,#0
                  |L2.22|
;;;201      }
;;;202    
;;;203      return ret;
000016  4620              MOV      r0,r4
;;;204    }
000018  bd10              POP      {r4,pc}
;;;205    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_Init||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_Init PROC
;;;106      */
;;;107    int32_t BSP_I2C1_Init(void)
000000  b510              PUSH     {r4,lr}
;;;108    {
;;;109    
;;;110      int32_t ret = BSP_ERROR_NONE;
000002  2400              MOVS     r4,#0
;;;111    
;;;112      hbusi2c1.Instance  = I2C1;
000004  480d              LDR      r0,|L3.60|
000006  490e              LDR      r1,|L3.64|
000008  6008              STR      r0,[r1,#0]  ; hbusi2c1
;;;113    
;;;114      if (HAL_I2C_GetState(&hbusi2c1) == HAL_I2C_STATE_RESET)
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       HAL_I2C_GetState
000010  b990              CBNZ     r0,|L3.56|
;;;115      {
;;;116    #if (USE_HAL_I2C_REGISTER_CALLBACKS == 0)
;;;117        /* Init the I2C Msp */
;;;118        I2C1_MspInit(&hbusi2c1);
000012  480b              LDR      r0,|L3.64|
000014  f7fffffe          BL       I2C1_MspInit
;;;119    #else
;;;120        if (IsI2C1MspCbValid == 0U)
;;;121        {
;;;122          if (BSP_I2C1_RegisterDefaultMspCallbacks() != BSP_ERROR_NONE)
;;;123          {
;;;124            return BSP_ERROR_MSP_FAILURE;
;;;125          }
;;;126        }
;;;127    #endif
;;;128    
;;;129        /* Init the I2C */
;;;130        if (MX_I2C1_Init(&hbusi2c1) != HAL_OK)
000018  4809              LDR      r0,|L3.64|
00001a  f7fffffe          BL       MX_I2C1_Init
00001e  b110              CBZ      r0,|L3.38|
;;;131        {
;;;132          ret = BSP_ERROR_BUS_FAILURE;
000020  f06f0407          MVN      r4,#7
000024  e008              B        |L3.56|
                  |L3.38|
;;;133        }
;;;134        else if (HAL_I2CEx_ConfigAnalogFilter(&hbusi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
000026  2100              MOVS     r1,#0
000028  4805              LDR      r0,|L3.64|
00002a  f7fffffe          BL       HAL_I2CEx_ConfigAnalogFilter
00002e  b110              CBZ      r0,|L3.54|
;;;135        {
;;;136          ret = BSP_ERROR_BUS_FAILURE;
000030  f06f0407          MVN      r4,#7
000034  e000              B        |L3.56|
                  |L3.54|
;;;137        }
;;;138        else
;;;139        {
;;;140          ret = BSP_ERROR_NONE;
000036  2400              MOVS     r4,#0
                  |L3.56|
;;;141        }
;;;142      }
;;;143    
;;;144      return ret;
000038  4620              MOV      r0,r4
;;;145    }
00003a  bd10              POP      {r4,pc}
;;;146    int32_t BSP_I2C3_Init(void)
                          ENDP

                  |L3.60|
                          DCD      0x40005400
                  |L3.64|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_IsReady||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_IsReady PROC
;;;209      */
;;;210    int32_t BSP_I2C1_IsReady(void)
000000  b510              PUSH     {r4,lr}
;;;211    {
;;;212      return (HAL_I2C_GetState(&hbusi2c1) == HAL_I2C_STATE_READY);
000002  4804              LDR      r0,|L4.20|
000004  f7fffffe          BL       HAL_I2C_GetState
000008  2820              CMP      r0,#0x20
00000a  d101              BNE      |L4.16|
00000c  2001              MOVS     r0,#1
                  |L4.14|
;;;213    }
00000e  bd10              POP      {r4,pc}
                  |L4.16|
000010  2000              MOVS     r0,#0                 ;212
000012  e7fc              B        |L4.14|
;;;214    
                          ENDP

                  |L4.20|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_ReadReg||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_ReadReg PROC
;;;241      */
;;;242    int32_t  BSP_I2C1_ReadReg(uint16_t DevAddr, uint16_t Reg, uint8_t *pData, uint16_t len)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;243    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;244      int32_t ret = BSP_ERROR_BUS_FAILURE;
00000c  f06f0807          MVN      r8,#7
;;;245    
;;;246      if (HAL_I2C_Mem_Read(&hbusi2c1, DevAddr, (uint16_t)Reg,
000010  f44f707a          MOV      r0,#0x3e8
000014  2301              MOVS     r3,#1
000016  462a              MOV      r2,r5
000018  4621              MOV      r1,r4
00001a  e9cd6700          STRD     r6,r7,[sp,#0]
00001e  9002              STR      r0,[sp,#8]
000020  4804              LDR      r0,|L5.52|
000022  f7fffffe          BL       HAL_I2C_Mem_Read
000026  b908              CBNZ     r0,|L5.44|
;;;247                           I2C_MEMADD_SIZE_8BIT, pData,
;;;248                           len, TIMEOUT_DURATION) == HAL_OK)
;;;249      {
;;;250        ret = HAL_OK;
000028  f04f0800          MOV      r8,#0
                  |L5.44|
;;;251      }
;;;252    
;;;253      return ret;
00002c  4640              MOV      r0,r8
;;;254    }
00002e  e8bd83fe          POP      {r1-r9,pc}
;;;255    
                          ENDP

000032  0000              DCW      0x0000
                  |L5.52|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_ReadReg16||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_ReadReg16 PROC
;;;282      */
;;;283    int32_t  BSP_I2C1_ReadReg16(uint16_t DevAddr, uint16_t Reg, uint8_t *pData, uint16_t len)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;284    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;285      int32_t ret = BSP_ERROR_BUS_FAILURE;
00000c  f06f0807          MVN      r8,#7
;;;286    
;;;287      if (HAL_I2C_Mem_Read(&hbusi2c1, DevAddr, (uint16_t)Reg,
000010  f44f707a          MOV      r0,#0x3e8
000014  2310              MOVS     r3,#0x10
000016  462a              MOV      r2,r5
000018  4621              MOV      r1,r4
00001a  e9cd6700          STRD     r6,r7,[sp,#0]
00001e  9002              STR      r0,[sp,#8]
000020  4804              LDR      r0,|L6.52|
000022  f7fffffe          BL       HAL_I2C_Mem_Read
000026  b908              CBNZ     r0,|L6.44|
;;;288                           I2C_MEMADD_SIZE_16BIT, pData,
;;;289                           len, TIMEOUT_DURATION) == HAL_OK)
;;;290      {
;;;291        ret = BSP_ERROR_NONE;
000028  f04f0800          MOV      r8,#0
                  |L6.44|
;;;292      }
;;;293    
;;;294      return ret;
00002c  4640              MOV      r0,r8
;;;295    }
00002e  e8bd83fe          POP      {r1-r9,pc}
;;;296    
                          ENDP

000032  0000              DCW      0x0000
                  |L6.52|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_Recv||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_Recv PROC
;;;322      */
;;;323    int32_t BSP_I2C1_Recv(uint16_t DevAddr, uint8_t *pData, uint16_t len)
000000  b5f8              PUSH     {r3-r7,lr}
;;;324    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
;;;325      int32_t ret = BSP_ERROR_BUS_FAILURE;
000008  f06f0707          MVN      r7,#7
;;;326    
;;;327      if (HAL_I2C_Master_Receive(&hbusi2c1, DevAddr, pData, len, TIMEOUT_DURATION) == HAL_OK)
00000c  f44f707a          MOV      r0,#0x3e8
000010  4623              MOV      r3,r4
000012  4632              MOV      r2,r6
000014  4629              MOV      r1,r5
000016  9000              STR      r0,[sp,#0]
000018  4803              LDR      r0,|L7.40|
00001a  f7fffffe          BL       HAL_I2C_Master_Receive
00001e  b900              CBNZ     r0,|L7.34|
;;;328      {
;;;329        ret = len;
000020  4627              MOV      r7,r4
                  |L7.34|
;;;330      }
;;;331    
;;;332      return ret;
000022  4638              MOV      r0,r7
;;;333    }
000024  bdf8              POP      {r3-r7,pc}
;;;334    
                          ENDP

000026  0000              DCW      0x0000
                  |L7.40|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_Send||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_Send PROC
;;;303      */
;;;304    int32_t BSP_I2C1_Send(uint16_t DevAddr, uint8_t *pData, uint16_t len)
000000  b5f8              PUSH     {r3-r7,lr}
;;;305    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
;;;306      int32_t ret = BSP_ERROR_BUS_FAILURE;
000008  f06f0707          MVN      r7,#7
;;;307    
;;;308      if (HAL_I2C_Master_Transmit(&hbusi2c1, DevAddr, pData, len, TIMEOUT_DURATION) == HAL_OK)
00000c  f44f707a          MOV      r0,#0x3e8
000010  4623              MOV      r3,r4
000012  4632              MOV      r2,r6
000014  4629              MOV      r1,r5
000016  9000              STR      r0,[sp,#0]
000018  4803              LDR      r0,|L8.40|
00001a  f7fffffe          BL       HAL_I2C_Master_Transmit
00001e  b900              CBNZ     r0,|L8.34|
;;;309      {
;;;310        ret = len;
000020  4627              MOV      r7,r4
                  |L8.34|
;;;311      }
;;;312    
;;;313      return ret;
000022  4638              MOV      r0,r7
;;;314    }
000024  bdf8              POP      {r3-r7,pc}
;;;315    
                          ENDP

000026  0000              DCW      0x0000
                  |L8.40|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_SendRecv||, CODE, READONLY, ALIGN=1

                  BSP_I2C1_SendRecv PROC
;;;342      */
;;;343    int32_t BSP_I2C1_SendRecv(uint16_t DevAddr, uint8_t *pTxdata, uint8_t *pRxdata, uint16_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;344    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4615              MOV      r5,r2
00000a  461c              MOV      r4,r3
;;;345      int32_t ret = BSP_ERROR_BUS_FAILURE;
00000c  f06f0807          MVN      r8,#7
;;;346    
;;;347      /*
;;;348       * Send and receive an amount of data through bus (Full duplex)
;;;349       * I2C is Half-Duplex protocol
;;;350       */
;;;351      if ((BSP_I2C1_Send(DevAddr, pTxdata, len) == len) && \
000010  4622              MOV      r2,r4
000012  4639              MOV      r1,r7
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       BSP_I2C1_Send
00001a  42a0              CMP      r0,r4
00001c  d107              BNE      |L9.46|
;;;352          (BSP_I2C1_Recv(DevAddr, pRxdata, len) == len))
00001e  4622              MOV      r2,r4
000020  4629              MOV      r1,r5
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       BSP_I2C1_Recv
000028  42a0              CMP      r0,r4
00002a  d100              BNE      |L9.46|
;;;353      {
;;;354        ret = len;
00002c  46a0              MOV      r8,r4
                  |L9.46|
;;;355      }
;;;356    
;;;357      return ret;
00002e  4640              MOV      r0,r8
;;;358    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;359    
                          ENDP


                          AREA ||i.BSP_I2C1_WriteReg||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_WriteReg PROC
;;;221      */
;;;222    int32_t BSP_I2C1_WriteReg(uint16_t DevAddr, uint16_t Reg, uint8_t *pData, uint16_t len)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;223    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;224      int32_t ret = BSP_ERROR_BUS_FAILURE;
00000c  f06f0807          MVN      r8,#7
;;;225    
;;;226      if (HAL_I2C_Mem_Write(&hbusi2c1, (uint8_t)DevAddr,
000010  f44f707a          MOV      r0,#0x3e8
000014  b2e1              UXTB     r1,r4
000016  2301              MOVS     r3,#1
000018  462a              MOV      r2,r5
00001a  e9cd6700          STRD     r6,r7,[sp,#0]
00001e  9002              STR      r0,[sp,#8]
000020  4804              LDR      r0,|L10.52|
000022  f7fffffe          BL       HAL_I2C_Mem_Write
000026  b908              CBNZ     r0,|L10.44|
;;;227                            (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT,
;;;228                            (uint8_t *)pData, len, TIMEOUT_DURATION) == HAL_OK)
;;;229      {
;;;230        ret = BSP_ERROR_NONE;
000028  f04f0800          MOV      r8,#0
                  |L10.44|
;;;231      }
;;;232    
;;;233      return ret;
00002c  4640              MOV      r0,r8
;;;234    }
00002e  e8bd83fe          POP      {r1-r9,pc}
;;;235    
                          ENDP

000032  0000              DCW      0x0000
                  |L10.52|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C1_WriteReg16||, CODE, READONLY, ALIGN=2

                  BSP_I2C1_WriteReg16 PROC
;;;262      */
;;;263    int32_t BSP_I2C1_WriteReg16(uint16_t DevAddr, uint16_t Reg, uint8_t *pData, uint16_t len)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;264    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;265      int32_t ret = BSP_ERROR_BUS_FAILURE;
00000c  f06f0807          MVN      r8,#7
;;;266    
;;;267      if (HAL_I2C_Mem_Write(&hbusi2c1, (uint8_t)DevAddr,
000010  f44f707a          MOV      r0,#0x3e8
000014  b2e1              UXTB     r1,r4
000016  2310              MOVS     r3,#0x10
000018  462a              MOV      r2,r5
00001a  e9cd6700          STRD     r6,r7,[sp,#0]
00001e  9002              STR      r0,[sp,#8]
000020  4804              LDR      r0,|L11.52|
000022  f7fffffe          BL       HAL_I2C_Mem_Write
000026  b908              CBNZ     r0,|L11.44|
;;;268                            (uint16_t)Reg, I2C_MEMADD_SIZE_16BIT,
;;;269                            (uint8_t *)pData, len, TIMEOUT_DURATION) == HAL_OK)
;;;270      {
;;;271        ret = BSP_ERROR_NONE;
000028  f04f0800          MOV      r8,#0
                  |L11.44|
;;;272      }
;;;273    
;;;274      return ret;
00002c  4640              MOV      r0,r8
;;;275    }
00002e  e8bd83fe          POP      {r1-r9,pc}
;;;276    
                          ENDP

000032  0000              DCW      0x0000
                  |L11.52|
                          DCD      hbusi2c1

                          AREA ||i.BSP_I2C3_Init||, CODE, READONLY, ALIGN=2

                  BSP_I2C3_Init PROC
;;;145    }
;;;146    int32_t BSP_I2C3_Init(void)
000000  b510              PUSH     {r4,lr}
;;;147    {
;;;148    	int32_t ret = BSP_ERROR_NONE;
000002  2400              MOVS     r4,#0
;;;149    
;;;150      hi2c3.Instance  = I2C3;
000004  480d              LDR      r0,|L12.60|
000006  490e              LDR      r1,|L12.64|
000008  6008              STR      r0,[r1,#0]  ; hi2c3
;;;151    
;;;152      if (HAL_I2C_GetState(&hi2c3) == HAL_I2C_STATE_RESET)
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       HAL_I2C_GetState
000010  b990              CBNZ     r0,|L12.56|
;;;153      {
;;;154    #if (USE_HAL_I2C_REGISTER_CALLBACKS == 0)
;;;155        /* Init the I2C Msp */
;;;156        I2C1_MspInit(&hi2c3);
000012  480b              LDR      r0,|L12.64|
000014  f7fffffe          BL       I2C1_MspInit
;;;157    #else
;;;158        if (IsI2C1MspCbValid == 0U)
;;;159        {
;;;160          if (BSP_I2C1_RegisterDefaultMspCallbacks() != BSP_ERROR_NONE)
;;;161          {
;;;162            return BSP_ERROR_MSP_FAILURE;
;;;163          }
;;;164        }
;;;165    #endif
;;;166    
;;;167        /* Init the I2C */
;;;168        if (MX_I2C1_Init(&hi2c3) != HAL_OK)
000018  4809              LDR      r0,|L12.64|
00001a  f7fffffe          BL       MX_I2C1_Init
00001e  b110              CBZ      r0,|L12.38|
;;;169        {
;;;170          ret = BSP_ERROR_BUS_FAILURE;
000020  f06f0407          MVN      r4,#7
000024  e008              B        |L12.56|
                  |L12.38|
;;;171        }
;;;172        else if (HAL_I2CEx_ConfigAnalogFilter(&hbusi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
000026  2100              MOVS     r1,#0
000028  4806              LDR      r0,|L12.68|
00002a  f7fffffe          BL       HAL_I2CEx_ConfigAnalogFilter
00002e  b110              CBZ      r0,|L12.54|
;;;173        {
;;;174          ret = BSP_ERROR_BUS_FAILURE;
000030  f06f0407          MVN      r4,#7
000034  e000              B        |L12.56|
                  |L12.54|
;;;175        }
;;;176        else
;;;177        {
;;;178          ret = BSP_ERROR_NONE;
000036  2400              MOVS     r4,#0
                  |L12.56|
;;;179        }
;;;180      }
;;;181    
;;;182      return ret;
000038  4620              MOV      r0,r4
;;;183    }
00003a  bd10              POP      {r4,pc}
;;;184    /**
                          ENDP

                  |L12.60|
                          DCD      0x40005c00
                  |L12.64|
                          DCD      hi2c3
                  |L12.68|
                          DCD      hbusi2c1

                          AREA ||i.I2C1_MspDeInit||, CODE, READONLY, ALIGN=2

                  I2C1_MspDeInit PROC
;;;501    
;;;502    static void I2C1_MspDeInit(I2C_HandleTypeDef *i2cHandle)
000000  b510              PUSH     {r4,lr}
;;;503    {
000002  4604              MOV      r4,r0
;;;504      /* USER CODE BEGIN I2C1_MspDeInit 0 */
;;;505    
;;;506      /* USER CODE END I2C1_MspDeInit 0 */
;;;507      /* Peripheral clock disable */
;;;508      __HAL_RCC_I2C1_CLK_DISABLE();
000004  480f              LDR      r0,|L13.68|
000006  6800              LDR      r0,[r0,#0]
000008  f4201000          BIC      r0,r0,#0x200000
00000c  490d              LDR      r1,|L13.68|
00000e  6008              STR      r0,[r1,#0]
;;;509    
;;;510      /**I2C1 GPIO Configuration
;;;511      PB8     ------> I2C1_SCL
;;;512      PB9     ------> I2C1_SDA
;;;513      */
;;;514      HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8 | GPIO_PIN_9);
000010  f44f7140          MOV      r1,#0x300
000014  480c              LDR      r0,|L13.72|
000016  f7fffffe          BL       HAL_GPIO_DeInit
;;;515    
;;;516      /* USER CODE BEGIN I2C1_MspDeInit 1 */
;;;517    if(i2cHandle->Instance==I2C3)
00001a  490c              LDR      r1,|L13.76|
00001c  6820              LDR      r0,[r4,#0]
00001e  4288              CMP      r0,r1
000020  d10e              BNE      |L13.64|
;;;518      {
;;;519      /* USER CODE BEGIN I2C3_MspDeInit 0 */
;;;520    
;;;521      /* USER CODE END I2C3_MspDeInit 0 */
;;;522        /* Peripheral clock disable */
;;;523        __HAL_RCC_I2C3_CLK_DISABLE();
000022  4808              LDR      r0,|L13.68|
000024  6800              LDR      r0,[r0,#0]
000026  f4200000          BIC      r0,r0,#0x800000
00002a  4906              LDR      r1,|L13.68|
00002c  6008              STR      r0,[r1,#0]
;;;524      
;;;525        /**I2C3 GPIO Configuration    
;;;526        PC9     ------> I2C3_SDA
;;;527        PA8     ------> I2C3_SCL 
;;;528        */
;;;529        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_9);
00002e  1549              ASRS     r1,r1,#21
000030  4807              LDR      r0,|L13.80|
000032  f7fffffe          BL       HAL_GPIO_DeInit
;;;530    
;;;531        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_8);
000036  f44f7180          MOV      r1,#0x100
00003a  4806              LDR      r0,|L13.84|
00003c  f7fffffe          BL       HAL_GPIO_DeInit
                  |L13.64|
;;;532    
;;;533      /* USER CODE BEGIN I2C2_MspDeInit 1 */
;;;534    
;;;535      /* USER CODE END I2C2_MspDeInit 1 */
;;;536      }
;;;537      /* USER CODE END I2C1_MspDeInit 1 */
;;;538    }
000040  bd10              POP      {r4,pc}
;;;539    
                          ENDP

000042  0000              DCW      0x0000
                  |L13.68|
                          DCD      0x40023840
                  |L13.72|
                          DCD      0x40020400
                  |L13.76|
                          DCD      0x40005c00
                  |L13.80|
                          DCD      0x40020800
                  |L13.84|
                          DCD      0x40020000

                          AREA ||i.I2C1_MspInit||, CODE, READONLY, ALIGN=2

                  I2C1_MspInit PROC
;;;445    
;;;446    static void I2C1_MspInit(I2C_HandleTypeDef *i2cHandle)
000000  b510              PUSH     {r4,lr}
;;;447    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;448      GPIO_InitTypeDef GPIO_InitStruct;
;;;449      /* USER CODE BEGIN I2C1_MspInit 0 */
;;;450    
;;;451      /* USER CODE END I2C1_MspInit 0 */
;;;452    
;;;453      /**I2C1 GPIO Configuration
;;;454      PB8     ------> I2C1_SCL
;;;455      PB9     ------> I2C1_SDA
;;;456      */
;;;457      GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
000006  f44f7040          MOV      r0,#0x300
00000a  9001              STR      r0,[sp,#4]
;;;458      GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
00000c  2012              MOVS     r0,#0x12
00000e  9002              STR      r0,[sp,#8]
;;;459      GPIO_InitStruct.Pull = GPIO_PULLUP;
000010  2001              MOVS     r0,#1
000012  9003              STR      r0,[sp,#0xc]
;;;460      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000014  2003              MOVS     r0,#3
000016  9004              STR      r0,[sp,#0x10]
;;;461      GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
000018  2004              MOVS     r0,#4
00001a  9005              STR      r0,[sp,#0x14]
;;;462      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
00001c  a901              ADD      r1,sp,#4
00001e  480a              LDR      r0,|L14.72|
000020  f7fffffe          BL       HAL_GPIO_Init
;;;463    
;;;464      /* Peripheral clock enable */
;;;465      __HAL_RCC_I2C1_CLK_ENABLE();
000024  bf00              NOP      
000026  2000              MOVS     r0,#0
000028  9000              STR      r0,[sp,#0]
00002a  4808              LDR      r0,|L14.76|
00002c  6800              LDR      r0,[r0,#0]
00002e  f4401000          ORR      r0,r0,#0x200000
000032  4906              LDR      r1,|L14.76|
000034  6008              STR      r0,[r1,#0]
000036  4608              MOV      r0,r1
000038  6800              LDR      r0,[r0,#0]
00003a  f4001000          AND      r0,r0,#0x200000
00003e  9000              STR      r0,[sp,#0]
000040  bf00              NOP      
000042  bf00              NOP      
;;;466      /* USER CODE BEGIN I2C1_MspInit 1 */
;;;467    /*if(i2cHandle->Instance==I2C3)
;;;468      {
;;;469      
;;;470      
;;;471        __HAL_RCC_GPIOC_CLK_ENABLE();
;;;472        __HAL_RCC_GPIOA_CLK_ENABLE();
;;;473       
;;;474        __HAL_RCC_I2C3_CLK_ENABLE();
;;;475    		
;;;476        GPIO_InitStruct.Pin = GPIO_PIN_9;
;;;477        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
;;;478        GPIO_InitStruct.Pull = GPIO_PULLUP;
;;;479        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
;;;480        GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
;;;481        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
;;;482    
;;;483        GPIO_InitStruct.Pin = GPIO_PIN_8;
;;;484        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
;;;485        GPIO_InitStruct.Pull = GPIO_PULLUP;
;;;486        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
;;;487        GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
;;;488        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
;;;489    
;;;490    GPIO_InitStruct.Pin = GPIO_PIN_3 | GPIO_PIN_10;
;;;491      GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
;;;492      GPIO_InitStruct.Pull = GPIO_PULLUP;
;;;493      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
;;;494      GPIO_InitStruct.Alternate = GPIO_AF9_I2C2;
;;;495    
;;;496      HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
;;;497       
;;;498      }*/
;;;499      /* USER CODE END I2C1_MspInit 1 */
;;;500    }
000044  b006              ADD      sp,sp,#0x18
000046  bd10              POP      {r4,pc}
;;;501    
                          ENDP

                  |L14.72|
                          DCD      0x40020400
                  |L14.76|
                          DCD      0x40023840

                          AREA ||i.MX_I2C1_Init||, CODE, READONLY, ALIGN=2

                  MX_I2C1_Init PROC
;;;424    
;;;425    __weak HAL_StatusTypeDef MX_I2C1_Init(I2C_HandleTypeDef *hi2c)
000000  b570              PUSH     {r4-r6,lr}
;;;426    {
000002  4604              MOV      r4,r0
;;;427      HAL_StatusTypeDef ret = HAL_OK;
000004  2500              MOVS     r5,#0
;;;428      hi2c->Instance = I2C1;
000006  480b              LDR      r0,|L15.52|
000008  6020              STR      r0,[r4,#0]
;;;429      hi2c->Init.ClockSpeed = 400000;
00000a  480b              LDR      r0,|L15.56|
00000c  6060              STR      r0,[r4,#4]
;;;430      hi2c->Init.DutyCycle = I2C_DUTYCYCLE_2;
00000e  2100              MOVS     r1,#0
000010  60a1              STR      r1,[r4,#8]
;;;431      hi2c->Init.OwnAddress1 = 0;
000012  60e1              STR      r1,[r4,#0xc]
;;;432      hi2c->Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
000014  f44f4180          MOV      r1,#0x4000
000018  6121              STR      r1,[r4,#0x10]
;;;433      hi2c->Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
00001a  2100              MOVS     r1,#0
00001c  6161              STR      r1,[r4,#0x14]
;;;434      hi2c->Init.OwnAddress2 = 0;
00001e  61a1              STR      r1,[r4,#0x18]
;;;435      hi2c->Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
000020  61e1              STR      r1,[r4,#0x1c]
;;;436      hi2c->Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
000022  6221              STR      r1,[r4,#0x20]
;;;437    
;;;438      if (HAL_I2C_Init(hi2c) != HAL_OK)
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       HAL_I2C_Init
00002a  b100              CBZ      r0,|L15.46|
;;;439      {
;;;440        ret = HAL_ERROR;
00002c  2501              MOVS     r5,#1
                  |L15.46|
;;;441      }
;;;442    
;;;443      return ret;
00002e  4628              MOV      r0,r5
;;;444    }
000030  bd70              POP      {r4-r6,pc}
;;;445    
                          ENDP

000032  0000              DCW      0x0000
                  |L15.52|
                          DCD      0x40005400
                  |L15.56|
                          DCD      0x00061a80

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hbusi2c1
                          %        84

;*** Start embedded assembler ***

#line 1 "..\\Src\\nucleo_f401re_bus.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_nucleo_f401re_bus_c_5bbc7c83____REV16|
#line 388 "..\\..\\..\\..\\..\\..\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_nucleo_f401re_bus_c_5bbc7c83____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_nucleo_f401re_bus_c_5bbc7c83____REVSH|
#line 402
|__asm___19_nucleo_f401re_bus_c_5bbc7c83____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_nucleo_f401re_bus_c_5bbc7c83____RRX|
#line 587
|__asm___19_nucleo_f401re_bus_c_5bbc7c83____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
